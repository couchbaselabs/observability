version: "3"
networks:
    front:
    back:

services:
    db1:
        container_name: db1
        # image: couchbase:6.6.2
        image: couchbase/server-sandbox:6.6.0
        ports:
            - "8091-8096:8091-8096"
            - "11210-11211:11210-11211"
        volumes:
            - log-volume:/opt/couchbase/var/lib/couchbase/logs/:rw
        networks:
            back:
                aliases:
                    - couchbase1.compose.local
    db2:
        container_name: db2
        image: couchbase:6.6.2
        expose:
            - "8091-8096"
            - "11210-11211"
        networks:
            back:
                aliases:
                    - couchbase2.compose.local
    db3:
        container_name: db3
        image: couchbase:6.6.2
        expose:
            - "8091-8096"
            - "11210-11211"
        networks:
            back:
                aliases:
                    - couchbase3.compose.local
    logging:
        container_name: logging
        image: couchbase/fluent-bit:1.0.1
        ports:
            # Metrics
            - "2020:2020"
        depends_on:
            - db1
            - loki
        environment:
            - COUCHBASE_LOGS=/opt/couchbase/var/lib/couchbase/logs
        volumes:
            - log-volume:/opt/couchbase/var/lib/couchbase/logs/:ro
            - ./fluent-bit.conf:/fluent-bit/config/fluent-bit.conf:ro
        networks:
            - back

    # Add an exporter for each
    exporter_db1:
        container_name: exporter_db1
        image: couchbase/exporter:1.0.4
        depends_on:
            - db1
        command:
            - '--couchbase-address=db1'
        networks:
            - back
    exporter_db2:
        container_name: exporter_db2
        image: couchbase/exporter:1.0.4
        depends_on:
            - db2
        command:
            - '--couchbase-address=db2'
        networks:
            - back
    exporter_db3:
        container_name: exporter_db3
        image: couchbase/exporter:1.0.4
        depends_on:
            - db3
        command:
            - '--couchbase-address=db3'
        networks:
            - back

    blackbox:
        container_name: blackbox
        image: prom/blackbox-exporter
        ports:
            - "9115:9115"
        depends_on:
            - db1
        volumes:
            - ./blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
        networks:
            - back

    # node-exporter:
    #     image: prom/node-exporter:latest
    #     container_name: monitoring_node_exporter
    #     expose:
    #         - 9100
    #     networks:
    #         - back
    # https://github.com/stefanprodan/dockprom/blob/master/docker-compose.yml
    nodeexporter:
        image: prom/node-exporter:v1.1.2
        container_name: nodeexporter
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
            - customcheck-volume:/custom-logs/:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
            - '--collector.textfile.directory=/custom-logs/'
        expose:
            - 9100
        networks:
            - back

    customchecker:
        image: ubuntu:20.04
        container_name: customchecker
        volumes:
            - customcheck-volume:/custom-logs/
            - ./customCheckScript.sh:/customCheckScript.sh
        environment:
            - TEXTFILE_COLLECTOR_DIR=/custom-logs
            - REPORTING_PERIOD_SECS=30
        command: /bin/bash /customCheckScript.sh
        networks:
            - back

    pushgateway:
        image: prom/pushgateway:v1.4.0
        container_name: pushgateway
        expose:
            - 9091
        networks:
            - back

    # Caddy (reverse proxy and basic auth provider for prometheus and alertmanager)
    # caddy:
    #     image: caddy:2.3.0
    #     container_name: caddy
    #     ports:
    #         - "3000:3000"
    #         - "9090:9090"
    #         - "9093:9093"
    #         - "9091:9091"
    #     volumes:
    #         - ./caddy:/etc/caddy
    #     environment:
    #         - ADMIN_USER=${ADMIN_USER:-admin}
    #         - ADMIN_PASSWORD=${ADMIN_PASSWORD:-password}
    #         NEED hash
    #     networks:
    #         - back

    # PLG bits from https://github.com/vegasbrianc/prometheus
    loki:
        image: grafana/loki:2.0.0
        ports:
            - "3100:3100"
        command: -config.file=/etc/loki/local-config.yaml
        networks:
            - back

    grafana:
        # Default creds are admin:password
        image: grafana/grafana:7.5.2
        ports:
            - "4000:3000"
        networks:
            - front
            - back
        volumes:
            - grafana_data:/var/lib/grafana
            # Put default data sources here
            - ./grafana/provisioning/:/etc/grafana/provisioning/
            - ./grafana/cblogo.png:/usr/share/grafana/public/img/cblogo.png
        env_file:
            - ./grafana/config.grafana

    cadvisor:
        image: google/cadvisor
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        ports:
            - 8080:8080
        networks:
            - back
        deploy:
            mode: global
    alertmanager:
        image: prom/alertmanager
        ports:
            - 9093:9093
        volumes:
            - ./alertmanager/:/etc/alertmanager/
        networks:
            - back
        command:
            - '--config.file=/etc/alertmanager/config.yml'
            - '--storage.path=/alertmanager'

    prometheus:
        image: prom/prometheus
        volumes:
            - ./prometheus/:/etc/prometheus/
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
        ports:
            - 9090:9090
        links:
            - cadvisor:cadvisor
            - alertmanager:alertmanager
            - exporter_db1:exporter_db1
            - exporter_db2:exporter_db2
            - exporter_db3:exporter_db3
        depends_on:
            - cadvisor
        networks:
            - back

volumes:
    log-volume:
    prometheus_data:
    grafana_data:
    customcheck-volume: