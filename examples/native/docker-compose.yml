# This is a simple compose stack to represent an example of an on-premise deployment.
# We run the couchbase server "stuff" as a set of containers but this is just a simulation and equivalent to running natively.
# We then run the microlith container to monitor the couchbase cluster.

version: "3"

# Split into front-end and back-end networks although front-end is probably unnecessary
networks:
    front:
    back:

services:

    # This first section is the main thrust of the microlith, it runs the all-in-one container up
    couchbase-grafana:
        # Build using build kit so we can do ssh mounts for private repo, do not build here
        # build: .
        image: couchbase-observability:latest
        container_name: couchbase-grafana
        environment:
            # Disable fluent bit and loki for perfomance plus demonstrate as an example
            - DISABLE_FLUENT_BIT=true
            - DISABLE_LOKI=true
            - DISABLE_PUSHGATEWAY=true
            # - DISABLE_JAEGAER=true
            # Log to local files rather than stdout
            - ENABLE_LOG_TO_FILE=true
            # Grafana password (default)
            # - GF_SECURITY_ADMIN_PASSWORD=password
            # Now to tune some rules for Prometheus: http://localhost:8080/prometheus/rules#Couchbase-Server
            - COUCHBASE_ACTIVE_RESIDENT_RATIO_ALERT_THRESHOLD=75 # default is 100
        volumes:
            # This location stores any dynamic Prometheus info (e.g. targets to scrape)
            # Update as necessary and it should be automatically picked up at the next interval (30 seconds)
            # http://localhost:8080/prometheus/service-discovery
            - ./dynamic/prometheus/couchbase-servers/:/etc/prometheus/couchbase/custom/:ro
            - ./dynamic/prometheus/custom-alertmanagers/:/etc/prometheus/alertmanager/custom/:ro
            # Custom alerts can be provided like so: http://localhost:8080/prometheus/rules#Custom
            - ./dynamic/prometheus/custom-alert-rules/:/etc/prometheus/alerting/custom/:ro
            # You can also replace all alerts to remove defaults so only provide custom:
            # - ./dynamic/prometheus/custom-alerts/:/etc/prometheus/alerting/:ro
            # This location stores any dynamic Healthcheck configuration
            - ./dynamic/healthcheck/:/etc/healthcheck/:ro
            # Log output here to help
            - ./logs:/logs:rw
        networks:
            - front
            - back
        ports:
            # Grafana
            - "3000:3000"
            # Loki
            - "3100:3100"
            # Prometheus
            - "9090:9090"
            # Healthcheck
            - "7196-7197:7196-7197"
            # Jaeger
            - "16686:16686"
            # Landing page
            - "8080:80"
            # Fluent bit metrics
            - "22020:22020"

    # This section is intended to represent a typical local deployment, instead of containers it could be done with native binaries
    db1:
        container_name: db1
        # image: couchbase:6.6.2
        image: couchbase/server-sandbox:6.6.0
        ports:
            - "8091-8096:8091-8096"
            - "11210-11211:11210-11211"
        volumes:
            - log-volume:/opt/couchbase/var/lib/couchbase/logs/:rw
        networks:
            - back

    # Logging disabled
    # permission-fixer:
    #     image: bash
    #     # CB server forces this on us as the permissions for the rebalance directory as well as logs are not for all
    #     # https://issues.couchbase.com/browse/MB-46485
    #     command: sh -c "mkdir -p /opt/couchbase/var/lib/couchbase/logs/rebalance; while true; do sleep 30;chmod -R a+r /opt/couchbase/var/lib/couchbase/logs/; done"
    #     user: root
    #     volumes:
    #         - log-volume:/opt/couchbase/var/lib/couchbase/logs/:rw

    # logging:
    #     container_name: logging
    #     image: couchbase/fluent-bit:1.0.3
    #     ports:
    #         # Metrics
    #         - "2020:2020"
    #     depends_on:
    #         - db1
    #         - couchbase-grafana
    #     environment:
    #         - COUCHBASE_LOGS=/opt/couchbase/var/lib/couchbase/logs
    #     volumes:
    #         - log-volume:/opt/couchbase/var/lib/couchbase/logs/:ro
    #         - ../../microlith/fluent-bit/fluent-bit.conf.server:/fluent-bit/config/fluent-bit.conf:ro
    #     networks:
    #         - back

    exporter:
        container_name: exporter
        image: couchbase/exporter:1.0.4
        command:
            - '--couchbase-address=db1'
        ports:
            - "9091:9091"
        depends_on:
            - db1
        networks:
            - back

volumes:
    log-volume:
