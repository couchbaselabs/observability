---
# This is a simple compose stack to represent an example of an on-premise deployment.
# We run the couchbase server "stuff" as a set of containers but this is just a simulation and equivalent to running natively.
# We then run the microlith container to monitor the couchbase cluster.

version: '3'

# Split into front-end and back-end networks although front-end is probably unnecessary
networks:
    front:
    back:


services:

    # This first section is the main thrust of the microlith, it runs the all-in-one container up
    couchbase-cmos:
        image: ${CMOS_IMAGE}
        container_name: couchbase-cmos
        # Note an environment file can be used as well, this is likely better for production
        environment:
            # Disable various components as an example
            # - DISABLE_LOKI=true
            # - DISABLE_JAEGER=true
            # Log to local files rather than stdout
            - ENABLE_LOG_TO_FILE=true
            # Grafana password (default)
            # - GF_SECURITY_ADMIN_PASSWORD=password
            # Now to tune some rules for Prometheus: http://localhost:8080/prometheus/rules#Couchbase-Server
            - COUCHBASE_ACTIVE_RESIDENT_RATIO_ALERT_THRESHOLD=75
            # default is 100
        volumes:
            # This location stores any dynamic Prometheus info (e.g. targets to scrape)
            # Update as necessary and it should be automatically picked up at the next interval (30 seconds)
            # http://localhost:8080/prometheus/service-discovery
            # No longer required with new config service unless you want to detain and maintain.
            # - ./dynamic/prometheus/couchbase-servers/:/etc/prometheus/couchbase/custom/:ro
            - ./dynamic/prometheus/custom-alertmanagers/:/etc/prometheus/alertmanager/custom/:ro
            # Custom alerts can be provided like so: http://localhost:8080/prometheus/rules#Custom
            - ./dynamic/prometheus/custom-alert-rules/:/etc/prometheus/alerting/custom/:ro
            # Currently there's no good way to disable a default rule (see https://issues.couchbase.com/browse/CMOS-72)
            # You can override the entire rules file to disable all rules in it, like so:
            # - ./dynamic/prometheus/custom-alerts/:/etc/prometheus/alerting/:ro
            # Log output here to help
            - ./logs:/logs:rw
        networks:
            - front
            - back
        ports:
            # Grafana
            - 3000:3000
            # Prometheus
            - 9090:9090
            # Alert manager
            - 9093:9093
            # Landing page
            - 8080:8080
            # Cluster monitor
            - 7196:7196
            # Loki
            - 3100:3100

    # This section is intended to represent a typical local deployment, instead of containers it could be done with native binaries
    db1:
        container_name: db1
        image: ${COUCHBASE_SERVER_IMAGE}
        ports:
            - 8091-8096:8091-8096
            - 11210-11211:11210-11211
        volumes:
            - ./configure-cbs.sh:/entrypoint.sh
            - log-volume:/opt/couchbase/var/lib/couchbase/logs/:rw
        networks:
            - back

    logging:
        container_name: logging
        image: ${FLUENT_BIT_IMAGE}
        ports:
            - 2020:2020
        depends_on:
            - db1
            - couchbase-cmos
        environment:
            - LOKI_HOST=couchbase-cmos
            - LOKI_MATCH=*
        volumes:
            - log-volume:/opt/couchbase/var/lib/couchbase/logs/:ro
        networks:
            - back

volumes:
    log-volume:
