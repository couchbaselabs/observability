---
# Main workflow
name: Build and test changes ready for PR signoff

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
jobs:
  # Ensure we always run unit tests
    run-unit-tests:
      name: Run PR unit tests
      runs-on: ubuntu-latest
      timeout-minutes: 5
      steps:
          - name: Checkout code
            uses: actions/checkout@v2

          - name: Run makefile target for unit tests
            run: |
                make test-unit

  # Build an image to share across jobs
    build-oss-container:
        name: Build OSS container for testing
        runs-on: ubuntu-20.04
        timeout-minutes: 10
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Build OSS container and export
              run: |
                  make container-oss -e DOCKER_USER=couchbaselabs -e DOCKER_TAG=${{ github.sha }}
                  docker save --output /tmp/cmos-image.tar couchbaselabs/observability-stack:${{ github.sha }}

            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  name: cmos-image
                  path: /tmp/cmos-image.tar

    smoke-test-oss-containers:
        name: Smoke tests - OSS - containers
        needs: build-oss-container
        runs-on: ubuntu-20.04
        timeout-minutes: 60
        strategy:
            fail-fast: false
            matrix:
                server-version: [6.6.3, 7.0.2]
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Download artifact
              uses: actions/download-artifact@v2
              with:
                  name: cmos-image
                  path: /tmp

            - name: Load CMOS image
              run: |
                  docker load --input /tmp/cmos-image.tar
                  docker image ls -a

            - name: Install BATS
              timeout-minutes: 5
              run: |
                  sudo npm install -g bats

            - name: Run ${{ matrix.server-version }} tests
              run: |
                  make TEST_SUITE=smoke test-containers -e COUCHBASE_SERVER_IMAGE=couchbase/server:${{ matrix.server-version }} -e DOCKER_USER=couchbaselabs -e DOCKER_TAG=${{ github.sha }}

  # TODO: once CMOS-97 is done, add something similar for k8s

    linting:
        name: Run static analysis and linting tools
        runs-on: ubuntu-20.04
        timeout-minutes: 10
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Run linting
              run: |
                  sudo apt install aspell
                  pip3 install "ansible-lint[community,yamllint]"
                  make lint
