daemon off;
worker_processes 1;
pid        /tmp/nginx.pid;
error_log stderr notice;
events {
    worker_connections 1024;
}

http {
    include                 mime.types;
    default_type            application/octet-stream;
    access_log              /dev/stdout;
    sendfile                on;
    keepalive_timeout       65;
    proxy_temp_path         /tmp/proxy_temp;
    client_body_temp_path   /tmp/client_temp;
    fastcgi_temp_path       /tmp/fastcgi_temp;
    uwsgi_temp_path         /tmp/uwsgi_temp;
    scgi_temp_path          /tmp/scgi_temp;

    server {
        listen  8080;
        root    /html;
        index   index.html;

        location ~ /grafana/ {
            proxy_pass  http://localhost:3000;
        }

        location /prometheus/ {
            proxy_pass  http://localhost:9090;
        }

        location /jaeger/ {
            proxy_pass  http://localhost:16686;
        }

        location /alertmanager/ {
            proxy_pass  http://localhost:9093;
        }

        # Self-monitoring
        location /_meta/status {
            stub_status;
        }

        # TODO (CMOS-98) - eventually these should all just be /couchbase/

        # Redirect /ui to its proper place just in case
        location ~ ^/ui/?$ {
            return 301 /couchbase/ui;
        }

        # Static assets are served here and there's no easy way to change it
        location /ui/assets/ {
            proxy_pass  http://localhost:7196;
        }

        # UI assumes the cbmultimanager REST API is on /api
        location /api/ {
            proxy_pass  http://localhost:7196;
        }

        location /couchbase {
            # Redirect to the UI to avoid a white page
            rewrite ^/couchbase/?$ /couchbase/ui redirect;
            # Strip the /couchbase prefix
            rewrite ^/couchbase/(.*) /$1 break;
            proxy_pass http://localhost:7196;
        }

        location /licenses/ {
            autoindex on;
        }

        location /config {
            proxy_pass http://localhost:7194;
        }
    }
}
